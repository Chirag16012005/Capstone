#include <iostream>
#include <unordered_map>
#include <string>

using namespace std;

string club[] = {"AI", "Dance", "Research", "Chess", "Cubing", "Excursion", "Microsoft", "Radio", "DCEI", "Sambhav",
                 "Developer_Student", "WebKit", "Business", "BIS", "Debate", "Music", "Programming", "IEEE", "Heritage", "Headrush_Quizzing Club",
                 "Muse", "Press", "DAIICT_Theatre", "Film", "Khelaiya", "EHC", "PMMC", "CINS"};

class Event
{

public:

    string name;
    string date;
    string time;
    int rating;
    string venue;
    string in1;
    string in2;
    string rule1;
    string rule2;
    string rule3;

};

unordered_map<string, unordered_multimap<int,Event>> ev_load()
{

unordered_map<string, unordered_multimap<int,Event>> data;
    
data["Radio"].insert({4,{"Weekly Poetry Writing Challenge","07/04/2024","19:00 to 21:00",5,"Radio Room(CEP)",
"Every Year, the world celebrates the art of poetry writing in April, since 1996 and so it is called National Poetry Writing Month.",
"We invite all poets to share their unique perspectives through the poetry and share poem through recording or in written form",
"1. Poem should not intend anyone anyone's feelings or faith.",
"2. Avoid the use of vulgar language.","3. Please submit your creations before the submission date."}});

data["Radio"].insert({10,{"Ink Chronicles","20/1/2024","20:00 to 22:00",4,"Online",
"This contest is our exclusive event where you can pour your heart out in a letter to your favourite chracacter.",
"Show your creativity and express your admiration for the characters who left an indelible mark on your mind through an open letter to them.",
"1. Your letter should not intend anyone anyone's feelings or faith.","2. Avoid the use of vulgar language.",
"3. Please submit your creations before the submission date."}});

data["AI"].insert({11,{"iPrompt","05/11/2024","14:00 to 16:00",5,"CEP 110","In this event, creativity and technology converge in an extraordinary way.",
"In this challenge, you will be provided with images and prompts, and with power of AI, you will transform these prompts into AI artwork and show your AI creativity.",
"1. Your creativity should not intend anyone anyone's feelings or faith.",
"2. Please avoid any art which contains objectionable things","3. Please submit your work before 04/11/2024."}});

data["AI"].insert({8,{"Prompt-A-Thon","21/08/2024","19:00 to 21:00",5,"Online",
"AI Club is holding an event where you will send prompts based on wildest and out of box scenarios and you may also onvert it into AI framework.",
"Let the horse of imagination run. The most interesting prompts will be awarded.","1. Your creativity should not intend anyone anyone's feelings or faith.",
"2. Please avoid any art which contains objectionable things","3. Please submit your work before 20/08/2024."}});

data["Chess"].insert({11,{"Chess64","04/11/2024","12:00 to 14:00",5,"OAT","All the chess enthusiasts out there, get ready with your amazing strategies and cool tactics.",
"We all want you to participate in Chess64, where you can unleash your inner Grandmaster and show off your strategic brilliance.",
"1. Please do not cheat or indulge in any unfair practices.","2. The final decision is in hands of judges.",
"3. You will be given specific time limit and you cannot exceed that."}});

data["Chess"].insert({1,{"Rapid Chess Tournament","16/01/2024","21:00 to 23:00",4,
"CEP-106","This rapid tournament for all the chess experts and enthusiasts out there. You can bring your A game to the table.",
"Everyone will be suggested to install the chess clock application on your mobile.",
"1. Please do not cheat or indulge in any unfair practices.","2. The final decision is in hands of judges.",
"3. You will be given specific time limit and you cannot exceed that."}});

data["Music"].insert({2,{"RAAGA AND RHAPSODY","24/02/2024","16:00 to 18:00",4,"OAT",
"We are thrilled to extend an invitation to you for our prestigious singing competition, RAAGA AND RHAPSODY as part of Synapse. Whether you're a solo performer, a dynamic duet, or a harmonious group, this event promises to showcase your vocal talents",
"Join us in celebrating music's magic and make your mark in this unforgettable experience.",
"1. You should report 30 mins prior to thee event.","2. Time Limit for solo/duet category is 5-7 mins and for team, it is 8-10 mins.",
"3. Team can be of maximum 4 members"}});

data["PMMC"].insert({2,{"Festive Frames Photography Contest","22/02/2024","10:00 to 18:00",4,"Online",
"We're thrilled to announce a captivating opportunity for all the shutterbugs and photography enthusiasts out there! PMMC is organizing a brand new contest titled Festive Frames",
"The theme of this exciting contest revolves around capturing the vibrant essence of our college fest through your lens",
"1. Photoshopped, heavily edited entries will be rejected.","2. Multiple entries are not allowed.", 
"3. Your submission should include your Name, contact number."}});

data["PMMC"].insert({12,{"Rolling Shutter(Videography)","17/12/2024","1 month",3,"Online",
"We are thrilled to invite you to participate in Rolling Shutter, our month-long videography challenge tailored for storytellers and visionaries. This challenge aims to showcase your creativity in narrating compelling visual tales through the lens of your camera.",
"Capture the essence of your entire break, showcasing the variety of activities and experiences that define your vacation.",
"1.Time limit: Entries should be of length between 60 Sec and 3 Minutes. Maximum Team size: 3",
"2. Entries can be submitted by individuals or by teams of a maximum size", 
"3. The deadline to submit your entry is 17th January 11:59 PM."}});
    
data["Khelaiya"].insert({9,{"Garba Night","14/09/2024","21:00 to 22:45",5,"OAT",
"The time for a lively Garba Night has arrived! It's an opportunity for all of us to come together and enjoy a night filled with dance, music, and fun.",
"From the splendid beauty of Ras Garba to energetic Dakla, from Titodo to Timli, from Sanedo to Bhai Bhai - it's time to celebrate and enjoy the night at its fullest.",
"1. Please wear traditional clothes.","2. Please arrive on time.","3. Please maintain decorum and cleanliness."}});

data["Khelaiya"].insert({9,{"Sheri Garba","15/09/2024","22:00 to 23:00",5,"SAC Ground",
"We are excited to invite you to a night filled with joy, music, and dance as we kick off the Garba night with Sheri Garba.",
"Get set to dance the night away at our Sheri Garba event! We're bringing the lively sounds of traditional dhol and sharnai to make the evening unforgettable!",
"1. Please wear traditional clothes.","2. Please arrive on time.","3. Please maintain decorum and cleanliness."}});

data["Film"].insert({3,{"IPL Screening","31/03/2024","19:00 to 23:00",5,"LT2",
"Join us for an evening filled with the electrifying atmosphere of cricket as we gather together to witness the battle between two formidable teams.",
"Whether you're a die-hard fan or just looking for a fun night of cricket, this event promises to be a memorable one.",
"1. Please arrive on time to enjoy to the fullest.",
"2. Please maintain the infrastructure of LT and do not break anything","3. Please maintain decorum and peace."}});

data["Film"].insert({1,{"Movie Screening","10/01/2024","21:00 to 23:59",5,"LT2",
"Get ready for a night of cinematic brilliance because this week, we're bringing you the unforgettable Inglourious Basterds! It's time to take a break from the daily grind and immerse yourself in Tarantino's world of action, humor, and pure adrenaline.",
"We will hosts more such movie nights.","1. Please arrive on time to enjoy to the fullest.","2. Please maintain the infrastructure of LT and do not break anything",
"3. Please maintain decorum and peace."}});

data["Press"].insert({10,{"Comic Carnival: A Comic Making Challenge","17/10/2024","Whole day",5,"Online","This is an opportunity to bring your imagination to life through comics.",
"A picture speaks a thousand words, and likewise, a great comic strip can contain stories that would otherwise span paragraphs. So if you can depict a relatable anecdote in a humorous manner or rather something touching, send us your entries!",
"1. You have to form a team of two members.", "2. Your comic strip can span multiple panels or it could be a single panel as well.",
"3. There is a maximum page limit of 6, but no cap on the number of panels."}});

data["Press"].insert({2,{"Valentine's Poetry Contest","13/02/2024","Whole Day",4,"Online",
"As you might be aware, Valentine's week is going on. And we hope you have a better half to share roses, chocolates and gifts with. Those who don't, no worries, your Valentine can be anyone you truly love (your parents).",
"To celebrate this occasion, what better medium of expression can there be to convey your boundless love to your beloved than poetry.",
"1. Entries can be in 3 languages: English, Hindi, Gujarati","2. Submissions after deadline won't be accepted.","3. One entry per person is allowed."}});

data["Research"].insert({11,{" i.Papyrus","04/11/2024","17:00 to 19:00",5,"CEP-110",
"Research Club DAIICT, in association with i.Fest, invites you all to participate in our annual poster presentation competition, i.Papyrus!!",
"Winners would be rewarded with prizes from the pool of 3.5k+!! So channel your inner researcher and participate in this amazing competition.",
"1. Each team can only submit a single poster.","2. The allowed team size is 1-3.",
"3. Each team must have all members unique and no other team sharing a common member, failure to do so will immediately disqualify the team(s)"}});

data["Cubing"].insert({2,{"SYNOCUBIX","24/02/2024","17:00 to 19:00",4,"LT-3","It is a great event which is part of official WCA i.cube.",
"Cubers will have the chance to flaunt their cubing skills in front of everyone and will strive to make the most of theirskill.",
 "1. One person can register only once.","2. You need not bring your own cube.","3. Please check your email ID while registering."}});

data["Cubing"].insert({1,{"Mosaic Construction: Republic Day","24/01/2024","10:00 to 12:00",5,"SAC Foyer",
"As we approach the Republic Day of India, we are delighted to invite you to participate in crafting a Rubik's Cube mosaic, serving as a symbol of our collective unity, diversity, and the indomitable spirit of innovation.",
"No prior experience with Rubik's Cubes is necessary; all skill levels are welcome! We will provide guidance and assistance throughout the event.",
"1. Please come on time.","2. Please maintain decorum throughout the whole event","3. You need not bring your own cube."}});

//Excursion club has no events
data["DCEI"].insert({11,{"SellOut","04/11/2024","16:00 to 18:00",5,"LT1"," SellOut that is open for everyone willing to show their creativity, entrepreneurial skills, and imagination.",
" The event being a fun event also gives glimpses of how real-world dealings happen.","1. One participant can only register once.",
"2. You must have the registration for the ifest.","3. Evaluation will be done on the basis of the answers given. Evaluation will be done by team DCEI."}});

data["Sambhav"].insert({4,{"Blood Donation Camp","05/04/2024","14:00 to 17:00",4,"Faculty Mess(Near K++)",
"We are pleased to announce that we are organizing a Blood Donation Camp in association with the Indian Red Cross Society.",
"Even the slightest bit of help is welcome and greatly appreciated. ","1.  You are advised to follow the COVID protocols.",
"2. Please get a basic medical checkup done.","3. Please inform the doctor if you are suffering from any disease."}});

data["Developer_Student"].insert({1,{"India Regional Bootcamp","21/01/2024","Unknown",5,"Online","This is your opportunity to solve real world problems, help users in real time and get recognised for the same!",
"The India Regional Bootcamp is cherry on the cake, to elevate your projects and get guidance from industry experts",
"1. Only one team member per team is allowed to join the regional bootcamp.","2. In case you are not shortlisted, we will not be able to share the exact reasons.",
"3. GDSC India Team reserves the right to invite, shortlist and confirm your participation for the same. The shortlisting criteria is subjected to various factors and will not be disclosed."}});

data["Developer_Student"].insert({1,{"GoLang Session","16/01/2024","21:00 to 23:00",5,"CEP 106",
"We are excited to invite you to our upcoming GoLang session at GDSC, where we will delve into the world of Go programming language and its applications.",
"Whether you are a seasoned developer or just curious about new technologies, this session is tailored for everyone interested in exploring the capabilities of GoLang.",
"1. Bring your laptops","2. Please register before coming.","3. Please maintain the decorum."}});

//WebKit club, no events found
data["Business"].insert({2,{"echai","16/02/2024","18:30 to 20:00",5,"LT1",
" eChai 2.0 is a dynamic and enriching networking event tailored to ignite your entrepreneurial spirit and foster innovation right here at DA-IICT!",
"eChai 2.0 promises to be an engaging platform where you can interact with accomplished entrepreneurs, exchange ideas, and explore new strategies to fuel your entrepreneurial journey.",
"1. Please register for this event.","2. Please maintain respect for the speaker.",
"3. Please maintain cleanliness in the hall."}});

data["BIS"].insert({2,{"Shaping Tomorrow's Sustainability Standards","15/02/2024","Whole day",5,"Online",
"The Bureau of Indian Standards (BIS) has launched the Shaping Tomorrow's Sustainability Standards contest.",
"This contest aims to inspire students and research scholars to identify new areas where standards can be developed to address sustainability and climate change issues.",
"1. You can only submit one entry at a time.","2. Submit your entry before the deadline.",
"3. Please attach a copy of Valid Student ID card with your entry"}});

data["BIS"].insert({3,{"Online Lecture Series","04/03/2024","16:00 to 17:30",5,"Webex(Online)","You are invited to the BIS Online Lecture Series Let's Talk about Standards: Electronics and IT",
"BIS is starting an interactive online lecture series titled 'Let's Talk about Standards' to take the initiative of Education Outreach forward with all the our eminent MoU partner Institutes",
"1. Please turn off your mic during the session unless told.","2. Switch on your camera during the whole session.","3. Email any doubts if you have."}});

data["Debate"].insert({2,{"Shipwreck and Prized British Parliamentary Debate!","15/02/2024","20:45 to 22:15",5,"CEP 106",
"Prepare to dive into the depths of discussion as Shipwreck offers a unique twist on traditional debate formats.",
"Engage in stimulating discourse on various intriguing topics, navigating through the waves of argumentation and wit.",
"1. You shall not hurt anybody's feelings intentionally","2. The langauge used shall be respectable.",
"3. Please don't harm any infrastructure."}});

data["Programming"].insert({{ }});



 return data;
}

void event(unordered_map<string, unordered_multimap<int,Event>> &data){

    cout<<"Press 1 to get info of any particular event"<<endl;
    cout<<"Press 2 to get info of all events of an club "<<endl;
    cout<<"Press 3 to get info of all events in a particular month "<<endl;
    cout<<"Press 4 to get info of all events of an club in a particular month "<<endl;
    cout<<"Press 5 if you don't know how many events conducted by clubs of daiict \nYou will get info of all events"<<endl;
    
    
    int n;
    cin>>n;
    cin.ignore();

    switch(n){

        case 1:
        {
        string evna;
        getline(cin,evna);

        it:

        cin.ignore();
        int a=0;

        for(int i=0;i<28;++i){
            for(auto eve : data[club[i]]){
                if(eve.second.name==evna){
                    //print it's detail
                    a=1;
                    break;
                }    
            }
        }

        if(a==0){
            cout<<"You provided wrong event name"<<endl;
            cout<<"Press 1 to enter name again or 0 to leave"<<endl;
            int n;
            cin>>n;
            if(n==0){
                goto it;
            }
        }
        
        break;
        }
        
        case 2:
        {
        string cl;
        cout<<"Enter the name of the club"<<endl;
        getline(cin,cl);
        cin.ignore();

        for(auto eve : data[cl]){
            cout<<"Event name : "<<eve.second.name<<endl;
        }

        //print like this


        break;
        }

        case 3:
        {
        int mn;
        cout<<"Enter number of month"<<endl;
        cin>>mn;

        for(int i=0;i<28;++i){
            auto temp = data[club[i]].equal_range(mn);

            for(auto person = temp.first ; person != temp.second ; ++person){
                cout<<"Event name :"<<person->second.name<<endl;

                //print like this
            }
        }
        break;
        }
        case 4:
        {
        int mn;
        string cl;
        cout<<"Enter name of the club and month"<<endl;
        getline(cin,cl);
        cin.ignore();
        cin>>mn;

        auto temp = data[cl].equal_range(mn);
        for(auto person = temp.first ; person != temp.second ; ++person){
            //print
        }
        break;
        }

        case 5:
        {
        cout<<"Here is detail of all events"<<endl;

        for(int i=0;i<28;++i){
            for(auto eve : data[club[i]]){
            cout<<"Event name : "<<eve.second.name<<endl;
        }
        }
        }
    }
}

void edit_ev(unordered_map<string, unordered_multimap<int, Event>> &data, unordered_map<string, unordered_map<long long, pair<string, pair<long long, string>>>> &directory)
{
    std::cout << "Enter your id" << endl;
    long long id;
    string cl;
    cin >> id;
    std::cout << "Enter the name of the club name whose event you want to change" << endl;
    cin >> cl;
    cin.ignore();
    int a = 0;

    for (int i = 0; i < 28; ++i)
    {
        auto person = directory[club[i]].find(id);
        if (person != directory[club[i]].end())
        {
            if (person->second.second.second == "Core" && club[i] == cl)
            {
                a = 1;
            }
            break;
        }
    }

    if (a == 0)
    {
        std::cout << "You are not a core member of " << cl << " club, so you can't edit its events" << endl;
    }
    else
    {
        std::cout << "You are a core member of " << cl << ", so you can make changes to its events" << endl;
        std::cout << "Enter the name of the event you want to edit" << endl;
        string evna;
        getline(cin, evna);
        cin.ignore();
        for (int i = 0; i < 28; ++i)
        {
            for (auto &eve : data[club[i]])
            {
                if (eve.second.name == evna)
                {
                label:
                    std::cout << "Enter the new details for the event " << evna << endl;
                    std::cout << "Which type of information you want to edit: " << endl
                              << "1.to Modify Date" << endl
                              << "2.to Modify Time" << endl
                              << "3.to Modify Venue" << endl
                              << "4.to Modify date time Venue" << endl;
                    std::cout << "Enter Choice: ";
                    int x;
                    cin >> x;
                    switch (x)
                    {
                    case 1:
                    {
                        string newdata;
                        std::cout << "Date: ";
                        getline(cin, newdata);
                        cin.ignore();
                        for (int j = 0; j < 28; ++j)
                        {
                            for (auto &other_eve : data[club[j]])
                            {
                                if (other_eve.second.name != evna &&
                                    other_eve.second.date == eve.second.date &&
                                    other_eve.second.time == eve.second.time &&
                                    other_eve.second.venue == eve.second.venue)
                                {
                                    std::cout << "That Time or date other event be held" << endl;
                                    std::cout << "Do you want to retry with different details? (y/n): ";
                                    char choice;
                                    cin >> choice;
                                    if (choice == 'y' || choice == 'Y')
                                    {
                                        goto label;
                                        break;
                                    }
                                    else
                                    {
                                        return;
                                    }
                                }
                            }
                        }
                        eve.second.date = newdata;
                        break;
                    }
                    case 2:
                    {
                        string newdata;
                        std::cout << "Time: ";
                        getline(cin, newdata);
                        cin.ignore();
                        for (int j = 0; j < 28; ++j)
                        {
                            for (auto &other_eve : data[club[j]])
                            {
                                if (other_eve.second.name != evna &&
                                    other_eve.second.date == eve.second.date &&
                                    other_eve.second.time == eve.second.time &&
                                    other_eve.second.venue == eve.second.venue)
                                {
                                    std::cout << "That Time or date other event be held" << endl;
                                    std::cout << "Do you want to retry with different details? (y/n): ";
                                    char choice;
                                    cin >> choice;
                                    if (choice == 'y' || choice == 'Y')
                                    {
                                        goto label;
                                        break;
                                    }
                                    else
                                    {
                                        return;
                                    }
                                }
                            }
                        }
                        eve.second.time = newdata;
                        break;
                    }
                    case 3:
                    {
                        string newdata;
                        std::cout << "Venue: ";
                        getline(cin, newdata);
                        cin.ignore();
                        for (int j = 0; j < 28; ++j)
                        {
                            for (auto &other_eve : data[club[j]])
                            {
                                if (other_eve.second.name != evna &&
                                    other_eve.second.date == eve.second.date &&
                                    other_eve.second.time == eve.second.time &&
                                    other_eve.second.venue == eve.second.venue)
                                {
                                    std::cout << "That Time or date other event be held" << endl;
                                    std::cout << "Do you want to retry with different details? (y/n): ";
                                    char choice;
                                    cin >> choice;
                                    if (choice == 'y' || choice == 'Y')
                                    {
                                        goto label;
                                        break;
                                    }
                                    else
                                    {
                                        return;
                                    }
                                }
                            }
                        }
                        eve.second.venue = newdata;
                        break;
                    }
                    case 4:
                    {
                        string newdata1;
                        std::cout << "Date: ";
                        getline(cin, newdata1);
                        cin.ignore();
                        string newdata2;
                        std::cout << "Time: ";
                        getline(cin, newdata2);
                        cin.ignore();
                        string newdata3;
                        std::cout << "Venue: ";
                        getline(cin, newdata3);
                        cin.ignore();
                        for (int j = 0; j < 28; ++j)
                        {
                            for (auto &other_eve : data[club[j]])
                            {
                                if (other_eve.second.name != evna &&
                                    other_eve.second.date == eve.second.date &&
                                    other_eve.second.time == eve.second.time &&
                                    other_eve.second.venue == eve.second.venue)
                                {
                                    std::cout << "That Time or date other event be held" << endl;
                                    std::cout << "Do you want to retry with different details? (y/n): ";
                                    char choice;
                                    cin >> choice;
                                    if (choice == 'y' || choice == 'Y')
                                    {
                                        goto label;
                                        break;
                                    }
                                    else
                                    {
                                        return;
                                    }
                                }
                            }
                        }
                        eve.second.date = newdata1;
                        eve.second.time = newdata2;
                        eve.second.venue = newdata3;
                        break;
                    }
                    }
                    std::cout << "Event " << evna << " has been updated" << endl;
                    a = 1;
                    break;
                }
            }
            if (a == 1)
                break;
        }
        if (a == 0)
        {
            std::cout << "Event " << evna << " not found" << endl;
        }
    }
}